
export KAFKA_OPTS--Djava.security.auth.login.config-dev_producer_ jaas.conf
export BootstrapBrokerStringÄªls2-"b-1.efos-kafka-dev2.dss95y.c3.kafka.ap-east-
1.amazonaws.com:9096,b-2.efos-kafka-dev2.dss95y.c3.kafka.ap-east-1.amazonaws.com:9096"
kafka _2.12-2.7.0/bin/kafka-topics.sh --bootstrap-server $BootstrapBrokerStringTls2
ommand-config client_sasl.properties --replication-factor 2 --partitions 1 --create
topic topic vi watchlist request
xport KAFKA OPTS=-Djava.securityauth.login.config-dev_producer_ jaas.conf
export BootstrapBrokerStringTls2-"b-1.efos-kafka-dev2.dss95y.c3.kafka.ap-east
1.amazonaws com:9096,b-2.efos-kafka-dev2.dss95y.c3.kafka.ap-east-1.amazonaws.com:9096"
kafka_2.12-2.7.0/bin/kafka-topics.sh --bootstrap-server $BootstrapBrokerStringTls2
command-config client_sasl.properties --replication-factor 2 --partitions 1 --delete
topic topic v watchlist request
kafka 2.12-2] 0/bin/kafka-topics.sh --bootstrap-server $BootstrapBrokerStringTls2
ommand-config client_sasl.properties --replication-factor 2 --partitions 1 --delete
opic txStreamingiesposne



// Read the file content
var filePath = '/path/to/your/file.txt';
var fileContent = fs.readFile(filePath);

// Encode the file content as Base64
var encodedContent = fs.encodeBase64(fileContent);

// Create the MIME message
var mimeMessage = 'Content-Type: application/octet-stream\r\n';
mimeMessage += 'Content-Disposition: attachment; filename="file.txt"\r\n\r\n';
mimeMessage += encodedContent;

// Now you can use the 'mimeMessage' as part of your request or message
console.log("Starting...");

const start ppppp

var delayInSeconds = 5; // Adjust this value to set your desired delay in seconds

// Calculate the delay in milliseconds
var delayInMilliseconds = delayInSeconds * 1000;

// Sleep function to introduce a delay
function sleep(ms) {
  var start = new Date().getTime();
  while (new Date().getTime() - start < ms) {}
}

console.log("Starting...");

// Introduce a delay of 'delayInMilliseconds' milliseconds
sleep(delayInMilliseconds);

console.log("After " + delayInSeconds + " seconds, this will be executed.");
